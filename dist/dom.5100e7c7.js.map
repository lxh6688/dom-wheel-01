{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","childNodes","x","array","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","innerHtml","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.5100e7c7.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    create(string) {\r\n        const container = document.createElement(\"template\");\r\n        container.innerHTML = string.trim();\r\n        return container.content.firstChild;\r\n    },\r\n    after(node,node2){\r\n        node.parentNode.insertBefore(node2,node.nextSibling);\r\n    },\r\n    before(node,node2){\r\n        node.parentNode.insertBefore(node2,node);\r\n    },\r\n    append(parent,node){\r\n        parent.appendChild(node);\r\n    },\r\n    wrap(node,parent){\r\n        dom.before(node,parent);\r\n        dom.append(parent,node);\r\n    },\r\n    remove(node){\r\n        node.parentNode.removeChild(node);\r\n        return node;\r\n    },\r\n    empty(node){\r\n        const {childNodes} = node;\r\n        const array = [];\r\n        let x = node.firstChild;\r\n        while(x){\r\n            array.push(dom.remove(node.firstChild));\r\n            x = node.firstChild;\r\n        }\r\n        return array;\r\n    },\r\n    attr(node,name,value){ //重载\r\n        if(arguments.length === 3){\r\n            node.setAttribute(name,value)\r\n        }else if(arguments.length === 2){\r\n            return node.getAttribute(name)\r\n        }    \r\n    },\r\n    text(node, string){\r\n       if(arguments.length === 2){\r\n            if('innerText' in node){\r\n                node.innerText = string\r\n            }else{\r\n                node.textContent = string\r\n            }\r\n        }\r\n        else if(arguments.length === 1){\r\n            if('innerText' in node){\r\n                return node.innerText \r\n            }else{\r\n                return node.textContent\r\n            }\r\n        }  \r\n    },\r\n    html(node, string){\r\n        if(arguments.length === 2){\r\n            node.innerHTML = string\r\n        }else if(arguments.length === 1){\r\n            return node.innerHtml\r\n        }  \r\n    },\r\n    style(node,name,value){\r\n        if(arguments.length === 3){\r\n          node.style[name] = value  \r\n        }else if(arguments.length === 2){\r\n            if(typeof name === 'string'){\r\n                return node.style[name]\r\n            }else if(name instanceof Object){\r\n                const object = name\r\n                for(let key in object){\r\n                    node.style[key] = object[key]\r\n                }\r\n            }  \r\n        }\r\n    },\r\n    class: {\r\n        add(node,className){\r\n            node.classList.add(className)\r\n        },\r\n        remove(node,className){\r\n            node.classList.remove(className)\r\n        },\r\n        has(node,className){\r\n            return node.classList.contains(className)\r\n        }\r\n    },\r\n    on(node,eventName,fn){\r\n        node.addEventListener(eventName,fn)\r\n    },\r\n    off(node,eventName,fn){\r\n        node.removeEventListener(eventName,fn)\r\n    },\r\n    find(selector, scope){\r\n        return (scope || document).querySelectorAll(selector)\r\n    },\r\n    parent(node){\r\n        return node.parentNode\r\n    },\r\n    children(node){\r\n        return node.children\r\n    },\r\n    siblings(node){\r\n        return Array.from(node.parentNode.children).filter(n => n != node)\r\n    },\r\n    next(node){\r\n        let x = node.nextSibling\r\n        while(x && x.nodeType ===3){\r\n            x = x.nextSibling\r\n        }\r\n        return x\r\n    },\r\n    previous(node){\r\n        let x = node,prebvious\r\n        while(x && x.nodeType ===3){\r\n            x = x.previousSibling\r\n        }\r\n        return x\r\n    },\r\n    each(nodeList, fn){\r\n        for(let i = 0;i<nodeList.length;i++){\r\n            fn.call(null,nodeList[i])\r\n        }\r\n    },\r\n    index(node){\r\n        const list = dom.children(node.parentNode)\r\n        let i\r\n        for(i = 0;i<list.length;i++){\r\n            if(list[i] === node){\r\n                break\r\n            }\r\n        }\r\n        return i\r\n    }\r\n};\r\n\r\n"]}